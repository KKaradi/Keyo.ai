/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  position: relative;
  width: $circle-size;
  height: $circle-size;
  border-radius: 50%;
  padding: 0;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -($item-size / 2);
    width: $item-size;
    height: $item-size;

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg)
          translate($circle-size / 2)
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}

$circleSize: 400px;
$itemSize: 125px;
$spinTime: 30s;
$scaleImage: 1.3;

.circleContainer {
  @include on-circle(
    $item-count: 5,
    $circle-size: $circleSize,
    $item-size: $itemSize
  );

  margin: 5em auto 0;
  animation: spin $spinTime linear infinite;

  img {
    border-radius: 20%;
  }
}

.imageContainer {
  display: block;
  max-width: 100%;
  height: $itemSize;
  width: $itemSize;
  animation: counterspin $spinTime linear infinite;
}

.imageResize {
  transition: all 1s ease-in-out;
}

.imageResize:hover {
  transform: scale($scaleImage);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes counterspin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-360deg);
  }
}
